{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vaults_akv_tlf_dev_caneast_001_name": {
            "defaultValue": "akv-tlf-test-caneast-001",
            "type": "String"
        },
        "privateEndpoints_pep_akv_tlf_dev_caneast_001_name": {
            "defaultValue": "pep-akv-tlf-test-caneast-001",
            "type": "String"
        },
        "privateDnsZones_privatelink_vaultcore_azure_net_name": {
            "defaultValue": "privatelink.vaultcore.azure.net",
            "type": "String"
        },
		"privateDnsZones_privatelink_azuresynapse_net_name": {
            "defaultValue": "privatelink.azuresynapse.net",
            "type": "String"
        },
		"privateDnsZones_privatelink_database_windows_net_name": {
            "defaultValue": "privatelink.database.windows.net",
            "type": "String"
        },
        "privateDnsZones_privatelink_dev_azuresynapse_net_name": {
            "defaultValue": "privatelink.dev.azuresynapse.net",
            "type": "String"
        },
        "privateDnsZones_privatelink_dfs_core_windows_net_name": {
            "defaultValue": "privatelink.dfs.core.windows.net",
            "type": "String"
        },
        "privateDnsZones_privatelink_sql_azuresynapse_net_name": {
            "defaultValue": "privatelink.sql.azuresynapse.net",
            "type": "String"
        },
		"peer_vnet_dev_to_vnet_shared_001_name": {
            "defaultValue": "peer_vnet_test_to_vnet_shared_001",
            "type": "String"
        },
		"virtualNetworks_vnet_infra_shared_caneast_001_externalid": {
            "defaultValue": "/subscriptions/ff4b3a60-46f3-4a56-b572-2cf79b77d467/resourceGroups/rg-infra-shared-001/providers/Microsoft.Network/virtualNetworks/vnet-infra-shared-caneast-001",
            "type": "String"
        },
		"virtualNetworks_vnet_infra_shared_caneast_001_iprange": {
            "defaultValue": "10.4.0.0/16",
            "type": "String"
        },
		"virtualNetworks_vnet_infra_dev_caneast_001_name": {
            "defaultValue": "vnet-infra-test-caneast-001",
            "type": "String"
        },
		"virtualNetworks_vnet_infra_dev_caneast_001_iprange": {
            "defaultValue": "10.9.0.0/16",
            "type": "String"
        },
		"snet_default_dev_caneast_001_iprange": {
            "defaultValue": "10.9.0.0/24",
            "type": "String"
        },
		"snet_datalake_dev_caneast_001_name": {
            "defaultValue": "snet-datalake-test-caneast-001",
            "type": "String"
        },
		"snet_datalake_dev_caneast_001_iprange": {
            "defaultValue": "10.9.1.0/24",
            "type": "String"
        },
		"snet_synapse_dev_caneast_001_name": {
            "defaultValue": "snet-synapse-test-caneast-001",
            "type": "String"
        },
		"snet_synapse_dev_caneast_001_iprange": {
            "defaultValue": "10.9.2.0/24",
            "type": "String"
        },
		"snet_sql_dev_caneast_001_name": {
            "defaultValue": "snet-sql-test-caneast-001",
            "type": "String"
        },
		"snet_sql_dev_caneast_001_iprange": {
            "defaultValue": "10.9.3.0/24",
            "type": "String"
        },
		"snet_vm_dev_caneast_001_name": {
            "defaultValue": "snet-vm-test-caneast-001",
            "type": "String"
        },
		"snet_vm_dev_caneast_001_iprange": {
            "defaultValue": "10.9.4.0/24",
            "type": "String"
        },
		"snet_akv_dev_caneast_001_name": {
            "defaultValue": "snet-akv-test-caneast-001",
            "type": "String"
        },
		"snet_akv_dev_caneast_001_iprange": {
            "defaultValue": "10.9.5.0/24",
            "type": "String"
        },
		"snet_sagex3_dev_caneast_001_name": {
            "defaultValue": "snet-sagex3-test-caneast-001",
            "type": "String"
        },
		"snet_sagex3_dev_caneast_001_iprange": {
            "defaultValue": "10.9.6.0/27",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2021-04-01-preview",
            "name": "[parameters('vaults_akv_tlf_dev_caneast_001_name')]",
            "location": "canadaeast",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "fdb52caa-e7b8-4394-b3bd-527a40a36dfc",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "ipRules": [],
                    "virtualNetworkRules": []
                },
                "accessPolicies": [],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": true,
                "vaultUri": "[concat('https://', parameters('vaults_akv_tlf_dev_caneast_001_name'), '.vault.azure.net/')]",
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_vaultcore_azure_net_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
		{
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_azuresynapse_net_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_database_windows_net_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_dfs_core_windows_net_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_sql_azuresynapse_net_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 3,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
		{
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_vaultcore_azure_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_vaultcore_azure_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
		{
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_azuresynapse_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_azuresynapse_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_database_windows_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_database_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_sql_azuresynapse_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_sql_azuresynapse_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
		{
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_vaultcore_azure_net_name'), '/link001')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_vaultcore_azure_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
                }
            }
        },
		{
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_azuresynapse_net_name'), '/link001')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_azuresynapse_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_database_windows_net_name'), '/link001')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_database_windows_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'), '/link001')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'), '/link001')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_sql_azuresynapse_net_name'), '/link001')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_sql_azuresynapse_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('virtualNetworks_vnet_infra_dev_caneast_001_name')]",
            "location": "canadaeast",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworks_vnet_infra_dev_caneast_001_iprange')]"
                    ]
                },
                "subnets": [
                    {
						"name": "[parameters('snet_sql_dev_caneast_001_name')]",
                        "properties": {
							"addressPrefix": "[parameters('snet_sql_dev_caneast_001_iprange')]",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Sql",
                                    "locations": [
                                        "canadaeast"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "default",
                        "properties": {
							"addressPrefix": "[parameters('snet_default_dev_caneast_001_iprange')]",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
						"name": "[parameters('snet_vm_dev_caneast_001_name')]",
                        "properties": {
							"addressPrefix": "[parameters('snet_vm_dev_caneast_001_iprange')]",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Sql",
                                    "locations": [
                                        "canadaeast"
                                    ]
                                },
                                {
                                    "service": "Microsoft.Storage",
                                    "locations": [
                                        "canadaeast",
                                        "canadacentral"
                                    ]
                                },
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
						"name": "[parameters('snet_datalake_dev_caneast_001_name')]",
                        "properties": {
							"addressPrefix": "[parameters('snet_datalake_dev_caneast_001_iprange')]",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "[parameters('snet_synapse_dev_caneast_001_name')]",
                        "properties": {
                            "addressPrefix": "[parameters('snet_synapse_dev_caneast_001_iprange')]",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "[parameters('snet_akv_dev_caneast_001_name')]",
                        "properties": {
                            "addressPrefix": "[parameters('snet_akv_dev_caneast_001_iprange')]",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "[parameters('snet_sagex3_dev_caneast_001_name')]",
                        "properties": {
                            "addressPrefix": "[parameters('snet_sagex3_dev_caneast_001_iprange')]",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
				"virtualNetworkPeerings": [
                    {
                        "name": "[parameters('peer_vnet_dev_to_vnet_shared_001_name')]",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[parameters('virtualNetworks_vnet_infra_shared_caneast_001_externalid')]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": true,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "[parameters('virtualNetworks_vnet_infra_shared_caneast_001_iprange')]"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false
            }
        },
		{
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'), concat('/',parameters('peer_vnet_dev_to_vnet_shared_001_name')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[parameters('virtualNetworks_vnet_infra_shared_caneast_001_externalid')]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": true,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworks_vnet_infra_shared_caneast_001_iprange')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('snet_default_dev_caneast_001_iprange')]",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'), concat('/',parameters('snet_akv_dev_caneast_001_name')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('snet_akv_dev_caneast_001_iprange')]",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'), concat('/',parameters('snet_datalake_dev_caneast_001_name')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('snet_datalake_dev_caneast_001_iprange')]",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'), concat('/',parameters('snet_sagex3_dev_caneast_001_name')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('snet_sagex3_dev_caneast_001_iprange')]",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'), concat('/',parameters('snet_sql_dev_caneast_001_name')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('snet_sql_dev_caneast_001_iprange')]",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Sql",
                        "locations": [
                            "canadaeast"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'), concat('/',parameters('snet_synapse_dev_caneast_001_name')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('snet_synapse_dev_caneast_001_iprange')]",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'), concat('/',parameters('snet_vm_dev_caneast_001_name')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('snet_vm_dev_caneast_001_iprange')]",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Sql",
                        "locations": [
                            "canadaeast"
                        ]
                    },
                    {
                        "service": "Microsoft.Storage",
                        "locations": [
                            "canadaeast",
                            "canadacentral"
                        ]
                    },
                    {
                        "service": "Microsoft.KeyVault",
                        "locations": [
                            "*"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-11-01",
            "name": "[parameters('privateEndpoints_pep_akv_tlf_dev_caneast_001_name')]",
            "location": "canadaeast",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_akv_tlf_dev_caneast_001_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'), parameters('snet_akv_dev_caneast_001_name'))]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('privateEndpoints_pep_akv_tlf_dev_caneast_001_name'), '_468f632f-1808-4b6b-93cd-379f1868f019')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_akv_tlf_dev_caneast_001_name'))]",
                            "groupIds": [
                                "vault"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_infra_dev_caneast_001_name'), parameters('snet_akv_dev_caneast_001_name'))]"
                },
                "customDnsConfigs": []
            }
        },
		{
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('privateEndpoints_pep_akv_tlf_dev_caneast_001_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_pep_akv_tlf_dev_caneast_001_name'))]",
				"[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_vaultcore_azure_net_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "privatelink_vaultcore_azure_net",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_vaultcore_azure_net_name'))]"
                        }
                    }
                ]
            }
        }
    ]
}